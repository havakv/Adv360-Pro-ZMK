
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    mo_tog: behavior_mo_tog {
        compatible = "zmk,behavior-hold-tap";
        label = "mo_tog";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&tog>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
    &kp N1     &kp N2       &kp N3       &kp N4       &kp N5  &kp N6       &tog 1                                                             &mo 3  &kp N7       &kp N8         &kp N9         &kp N0  &kp MINUS  &kp EQUAL
 &kp GRAVE      &kp Q        &kp W        &kp E        &kp R   &kp T        &none                                                             &none   &kp Y        &kp U          &kp I          &kp O      &kp P   &kp LBKT
  &kp CAPS      &kp A        &kp S        &kp D        &kp F   &kp G        &none  &kp RGUI      &none                &none   &kp LGUI        &none   &kp H        &kp J          &kp K          &kp L   &kp SEMI    &kp SQT
 &kp LSHFT      &kp Z  &hm LCTRL X   &hm LALT C  &hm LSHFT V   &kp B                          &kp HOME            &kp PG_UP                           &kp N  &hm RSHFT M  &hm RALT COMMA  &hm RCTRL DOT  &kp FSLH   &kp BSLH
     &mo 2  &kp GRAVE      &kp ESC  &mo_tog 1 1      &kp TAB           &lt 1 BSPC   &kp DEL    &kp END            &kp PG_DN  &kp ENTER  &lt 1 SPACE               &kp UP        &kp DOWN       &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4    &kp N5              &trans                                                                 &mo 3    &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
  &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT &kp CARET               &none                                                                 &none  &kp AMPS   &kp ASTRK      &kp LPAR       &kp RPAR        &kp UNDER   &kp PLUS
   &kp ESC      &kp A     &kp S     &kp D      &kp F     &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL   &kp HOME  &kp LEFT    &kp DOWN        &kp UP      &kp RIGHT          &kp END    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V     &kp B                                 &kp HOME                  &kp PG_UP                           &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &trans    &kp RIGHT                      &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0                &kp UP  &kp LA(ENTER) &kp LS(ENTER)         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

    };
};
